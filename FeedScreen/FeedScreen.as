package FeedScreen{	import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.events.MouseEvent;	import flash.display.*;	import FrubbFeeding;	import flash.events.Event;	import FoodBar;	import fl.transitions.Tween;	import fl.transitions.easing.*;	import flash.geom.Point;	import flash.events.TouchEvent;	//import FeedScreen.Protein;	import FoodItem;	public class FeedScreen extends MovieClip	{		private var foodBar:FoodBar;		public var frubb:FrubbFeeding;		private var isProteinShowing:Boolean = false;		private var FoodTable:Sprite;		 		public function FeedScreen()		{			trace("Feed screen initialized");			this.addEventListener(Event.ADDED_TO_STAGE, init);			this.addEventListener(Event.REMOVED, dispose);		}		private function init(e:Event):void		{			frubb = new FrubbFeeding();			frubb.name = "frubb";			addChild(frubb);			trace(frubb + frubb.name);						frubb.x = stage.stageWidth/2;			frubb.y = 300;			frubb.gotoAndPlay("wander");						foodBar = new FoodBar();			addChild(foodBar);			foodBar.y = 0;			var foodTween:Tween = new Tween(foodBar, "x", Elastic.easeInOut, -stage.stageWidth, 0, 1, true);			initFoodButtons();					}				private function initFoodButtons():void {			//btnProtein = new BtnProtein();			foodBar.btnProtein.addEventListener(MouseEvent.MOUSE_DOWN, chooseProtein);			foodBar.btnVeggy.addEventListener(MouseEvent.MOUSE_DOWN, chooseVeggy);			foodBar.btnFruits.addEventListener(MouseEvent.MOUSE_DOWN, chooseFruits);			foodBar.btnSugar.addEventListener(MouseEvent.MOUSE_DOWN, chooseSugar);			foodBar.btnGrains.addEventListener(MouseEvent.MOUSE_DOWN, chooseGrains);			foodBar.btnDairy.addEventListener(MouseEvent.MOUSE_DOWN, chooseDairy);		}				public function chooseProtein(e:MouseEvent):void 		{			//add protein			/*var protein:Protein;			if(!protein) {				protein = new Protein(frubb);				addChild(protein);				protein.x = 0;				protein.y = 0;			}*/			if(!isProteinShowing) {				initItems("protein");				isProteinShowing = true;			}		}				private function initItems(type:String):void		{			switch(type) {				case "protein":					for(var i:int=0; i<4; i++) 					{						var proteinItem:FoodItem = new FoodItem();						proteinItem.gotoAndStop(i+1);						proteinItem.x = 0;						proteinItem.y = 300;									//itemArray.push(proteinItem);									addChild(proteinItem);									var k:Number = 50 + (i * 250);						var proteinBarTween:Tween = new Tween(proteinItem,"x",Regular.easeInOut,0, k, 1, true);									proteinItem.addEventListener(MouseEvent.MOUSE_DOWN, startDragItem);						proteinItem.addEventListener(MouseEvent.MOUSE_UP, stopDragItem);					}				break;								case "vegetables":				break;								case "fruits":				break;								case "sugars":				break;								case "grains":				break;								case "dairy":				break;								}					}				private function removeItems():void{					}				public function startDragItem(e:MouseEvent):void		{			MovieClip(e.currentTarget).startDrag();		}		public function stopDragItem(e:MouseEvent):void		{			MovieClip(e.currentTarget).stopDrag();		}										public function chooseVeggy(e:MouseEvent):void {			trace("Vegetables selected");		}		public function chooseFruits(e:MouseEvent):void {			trace("Fruits selected");		}		public function chooseSugar(e:MouseEvent):void {			trace("Sugar selected");		}		public function chooseGrains(e:MouseEvent):void {			trace("Grains selected");		}		public function chooseDairy(e:MouseEvent):void {			trace("Dairy selected");		}				public function dispose():void		{			//Remove Listeners			foodBar.btnProtein.removeEventListener(MouseEvent.MOUSE_DOWN, chooseProtein);			foodBar.btnVeggy.removeEventListener(MouseEvent.MOUSE_DOWN, chooseVeggy);			foodBar.btnFruits.removeEventListener(MouseEvent.MOUSE_DOWN, chooseFruits);			foodBar.btnSugar.removeEventListener(MouseEvent.MOUSE_DOWN, chooseSugar);			foodBar.btnGrains.removeEventListener(MouseEvent.MOUSE_DOWN, chooseGrains);			foodBar.btnDairy.removeEventListener(MouseEvent.MOUSE_DOWN, chooseDairy);						//this.stage.removeEventListener(Event.ADDED_TO_STAGE, init);			//this.stage.removeEventListener(Event.REMOVED, dispose);						//Let GC clean global variables			foodBar = null;			frubb = null;		}	}}